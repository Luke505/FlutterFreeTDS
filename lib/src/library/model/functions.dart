library freetds.library.model.dart;

import 'dart:ffi';

import 'package:ffi/ffi.dart';
import 'package:freetds/src/library/model/model.dart';

// Dart function pointer types
typedef dbgetuserdata_Dart = Pointer<Uint8> Function(Pointer<DBPROCESS> dbproc);
typedef dbhasretstat_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbinit_Dart = int Function();
typedef dbiordesc_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dberrhandle_Dart = void Function(Pointer<NativeFunction<ehandlefunc_Native>> handler);
typedef dbexit_Dart = void Function();
typedef dbfirstrow_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbmsghandle_Dart = void Function(Pointer<NativeFunction<mhandlefunc_Native>> handler);
typedef dbname_Dart = Pointer<Utf8> Function(Pointer<DBPROCESS> dbproc);
typedef status_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbnextrow_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbnullbind_Dart = int Function(Pointer<DBPROCESS> dbproc, int column, Pointer<Int32> indicator);
typedef dbnumalts_Dart = int Function(Pointer<DBPROCESS> dbproc, int computeid);
typedef dbnumcols_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbnumcompute_Dart = int Function(Pointer<DBPROCESS> dbprocess);
typedef dbnumrets_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef tdsdbopen_Dart = Pointer<DBPROCESS> Function(Pointer<LOGINREC> login, Pointer<Utf8> server, int msdblib);
typedef dbopen_Dart = Pointer<DBPROCESS> Function(Pointer<LOGINREC> login, Pointer<Utf8> server);
typedef dbclose_Dart = void Function(Pointer<DBPROCESS> dbproc);
typedef dbloginfree_Dart = void Function(Pointer<LOGINREC> login);
typedef dbfreebuf_Dart = void Function(Pointer<DBPROCESS> dbproc);
typedef dbdead_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbsetlname_Dart = int Function(Pointer<LOGINREC> login, Pointer<Utf8> value, int which);
typedef dblogin_Dart = Pointer<LOGINREC> Function();
typedef dbsetlogintime_Dart = int Function(int seconds);
typedef dbuse_Dart = int Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> name);
typedef dbsqlexec_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbresults_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbcolname_Dart = Pointer<Utf8> Function(Pointer<DBPROCESS> dbproc, int column);
typedef dbcoltype_Dart = int Function(Pointer<DBPROCESS> dbproc, int column);
typedef dbcollen_Dart = int Function(Pointer<DBPROCESS> dbproc, int column);
typedef dbbind_Dart = int Function(Pointer<DBPROCESS> dbproc, int column, int vartype, int varlen, Pointer<Uint8> varaddr);
typedef dbanydatecrack_Dart = int Function(Pointer<DBPROCESS> dbproc, Pointer<DBDATEREC2> di, int type, Pointer<Uint8> data);
typedef dbconvert_Dart = int Function(Pointer<DBPROCESS> dbproc, int srctype, Pointer<Uint8> src, int srclen, int desttype, Pointer<Uint8> dest, int destlen);
typedef dbdatecrack_Dart = int Function(Pointer<DBPROCESS> dbproc, Pointer<DBDATEREC> di, Pointer<DBDATETIME> dt);
typedef dbsettime_Dart = int Function(int seconds);
typedef dbcmd_Dart = int Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> cmdstring);
typedef dbcount_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlsend_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlok_Dart = int Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlexecparams_Dart = int Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> query, Pointer<TDSQUERYPARAM> params);

// Function pointer types for C functions
typedef dbgetuserdata_Native = Pointer<Uint8> Function(Pointer<DBPROCESS> dbproc);
typedef dbhasretstat_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbinit_Native = Int32 Function();
typedef dbiordesc_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef ehandlefunc_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 severity, Int32 dberr, Int32 oserr, Pointer<Utf8> dberrstr, Pointer<Utf8> oserrstr);
typedef dberrhandle_Native = Void Function(Pointer<NativeFunction<ehandlefunc_Native>> handler);
typedef dbexit_Native = Void Function();
typedef dbfirstrow_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef mhandlefunc_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int64 msgno, Int32 msgstate, Int32 severity, Pointer<Utf8> msgtext, Pointer<Utf8> srvname, Pointer<Utf8> proc, Int32 line);
typedef dbmsghandle_Native = Void Function(Pointer<NativeFunction<mhandlefunc_Native>> handler);
typedef dbname_Native = Pointer<Utf8> Function(Pointer<DBPROCESS> dbproc);
typedef status_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbnextrow_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbnullbind_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 column, Pointer<Int32> indicator);
typedef dbnumalts_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 computeid);
typedef dbnumcols_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbnumcompute_Native = Int32 Function(Pointer<DBPROCESS> dbprocess);
typedef dbnumrets_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef tdsdbopen_Native = Pointer<DBPROCESS> Function(Pointer<LOGINREC> login, Pointer<Utf8> server, Int32 msdblib);
typedef dbopen_Native = Pointer<DBPROCESS> Function(Pointer<LOGINREC> login, Pointer<Utf8> server);
typedef dbclose_Native = Void Function(Pointer<DBPROCESS> dbproc);
typedef dbloginfree_Native = Void Function(Pointer<LOGINREC> login);
typedef dbfreebuf_Native = Void Function(Pointer<DBPROCESS> dbproc);
typedef dbdead_Native = Uint8 Function(Pointer<DBPROCESS> dbproc);
typedef dbsetlname_Native = Int32 Function(Pointer<LOGINREC> login, Pointer<Utf8> value, Int32 which);
typedef dblogin_Native = Pointer<LOGINREC> Function();
typedef dbsetlogintime_Native = Int32 Function(Int32 seconds);
typedef dbuse_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> name);
typedef dbsqlexec_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbresults_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbcolname_Native = Pointer<Utf8> Function(Pointer<DBPROCESS> dbproc, Int32 column);
typedef dbcoltype_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 column);
typedef dbcollen_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 column);
typedef dbbind_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 column, Int32 vartype, Int32 varlen, Pointer<Uint8> varaddr);
typedef dbanydatecrack_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Pointer<DBDATEREC2> di, Int32 type, Pointer<Uint8> data);
typedef dbconvert_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Int32 srctype, Pointer<Uint8> src, Int32 srclen, Int32 desttype, Pointer<Uint8> dest, Int32 destlen);
typedef dbdatecrack_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Pointer<DBDATEREC> di, Pointer<DBDATETIME> dt);
typedef dbsettime_Native = Int32 Function(Int32 seconds);
typedef dbcmd_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> cmdstring);
typedef dbcount_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlsend_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlok_Native = Int32 Function(Pointer<DBPROCESS> dbproc);
typedef dbsqlexecparams_Native = Int32 Function(Pointer<DBPROCESS> dbproc, Pointer<Utf8> query, Pointer<TDSQUERYPARAM> params);
